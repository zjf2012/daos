"""Build common libraries"""
import daos_build

COMMON_SRC = ['debug.c', 'mem.c', 'fail_loc.c', 'lru.c',
              'misc.c', 'pool_map.c', 'sort.c', 'btree.c', 'prop.c',
              'btree_class.c', 'tse.c', 'rsvc.c', 'checksum.c',
              'drpc.c', 'drpc.pb-c.c', 'proc.c',
              'acl_api.c', 'acl_util.c', 'acl_principal.c',
              'profile.c']

def build_common(env, client, prereqs):
    denv = env.Clone()

    if client:
        denv.Append(CPPDEFINES=['-DDAOS_CLIENT_BUILD'])
        denv.Append(OBJPREFIX="v_")
        install = 'lib64'
        libname = 'daos_common_cli'
    else:
        prereqs.require(denv, 'pmdk')
        install = 'lib64/daos_srv'
        libname = 'daos_common'

    common_src = COMMON_SRC
    common = daos_build.library(denv, libname, common_src)
    denv.Install('$PREFIX/' + install, common)

def scons():
    """Execute build"""
    Import('env', 'prereqs', 'platform_arm')

    env.AppendUnique(LIBPATH=[Dir('.')])

    # Hack alert, the argobots headers are required but the shared
    # library isn't so add the dependancy so the include path
    # is correct, but set _libs to [] so that the library isn't
    # linked in.

    prereqs.require(env, 'isal')

    denv = env.Clone()
    prereqs.require(denv, 'protobufc')
    denv.AppendUnique(LIBS=['cart', 'gurt'])

    build_common(denv, True, prereqs)
    build_common(denv, False, prereqs)

    tenv = denv.Clone()

    prereqs.require(tenv, 'argobots')

    tests_lib_src = ['tests_lib.c']
    tests_lib = daos_build.library(tenv, 'libdaos_tests', tests_lib_src)
    tenv.Install('$PREFIX/lib64/', tests_lib)

    SConscript('tests/SConscript', exports='tenv')

if __name__ == "SCons.Script":
    scons()
